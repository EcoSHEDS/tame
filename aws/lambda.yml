AWSTemplateFormatVersion: 2010-09-09
Description: Lambda resource stack for TAME
Parameters:
  functionName:
    Type: String
    Default: tame-dev-lambda
  databaseArn:
    Type: String
    Default: arn:aws:dynamodb:us-east-1:474916309046:table/tame-dev-projects
  storageArn:
    Type: String
    Default: arn:aws:s3:::tame-dev-storage
  roleName:
    Type: String
    Default: tame-dev-lambda-role
  policyName:
    Type: String
    Default: tame-dev-lambda-policy
Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: LambdaExecutionRole
    Properties:
      FunctionName:
        Ref: functionName
      Handler: lambda.handler
      Environment:
        Variables:
          REGION:
            Ref: AWS::Region
          TABLE_NAME:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Ref: databaseArn
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs12.x
      Timeout: '25'
      Code:
        S3Bucket: tame-dev-deployment
        S3Key: lambda/eb1e18d9914a64e42557e1ab6b97eb44
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: roleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  LambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    DependsOn: LambdaExecutionRole
    Properties:
      PolicyName:
        Ref: policyName
      Roles:
      - Ref: LambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub:
            - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
            - region:
                Ref: AWS::Region
              account:
                Ref: AWS::AccountId
              lambda:
                Ref: LambdaFunction
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          Resource:
            Ref: databaseArn
        - Effect: Allow
          Action:
          - s3:putObject
          - s3:deleteObject
          Resource:
            Fn::Join:
            - ''
            - - Ref: storageArn
              - /*
Outputs:
  Region:
    Value:
      Ref: AWS::Region
  Name:
    Value:
      Ref: LambdaFunction
  Arn:
    Value:
      Fn::GetAtt:
      - LambdaFunction
      - Arn
  LambdaExecutionRole:
    Value:
      Ref: LambdaExecutionRole
