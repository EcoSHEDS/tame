AWSTemplateFormatVersion: '2010-09-09'
Description: Storage (S3) resource stack for TAME
Parameters:
  bucketName:
    Type: String
    Default: tame-storage
  authRoleName:
    Type: String
    Default: tame-role-auth
  unauthRoleName:
    Type: String
    Default: tame-role-unauth
Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref bucketName
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - "*"
          AllowedMethods:
          - GET
          - HEAD
          - PUT
          - POST
          - DELETE
          AllowedOrigins:
          - "*"
          ExposedHeaders:
          - x-amz-server-side-encryption
          - x-amz-request-id
          - x-amz-id-2
          - ETag
          Id: S3CORSRuleTame
          MaxAge: '3000'
  S3AuthPolicy:
    DependsOn: S3Bucket
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: TameS3_AuthPolicy
      Roles:
        - !Ref authRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3Bucket, '/protected/${cognito-identity.amazonaws.com:sub}/*']]
  S3GuestPolicy:
    DependsOn: S3Bucket
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: TameS3_GuestPolicy
      Roles:
        - !Ref unauthRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3Bucket, '/protected/*']]
Outputs:
  Region:
    Value: !Ref AWS::Region
  BucketName:
    Value: !Ref S3Bucket
    Description: Bucket name for the S3 bucket
